program = "program" identifier ";" { var_declaration } { function_declaration } { var_declaration } expression "." ;

var_declaration = ( "var" | "const" ) ( identifier { "," identifier } ( ":" type | = expression ) ";" ) +;

function_declaration = "function" identifier "(" [ identifier ":" type { ";" identifier ":" type } ] ")" ":" type ";"
    { var_declaration }
    expression ";" ;

expression = block | if | while | for | operationL6 | ;

block = "begin" expression { ";" expression } "end"; 

operationL0 = identifier | literal | identifier "(" call_args ")" | "(" expression ")"  | identifier "[" expression "]" ;

operationL1 = operationL0 | "!" operationL1 | "~" operationL1 | "-" operationL1 | "+" operationL1 ;

operationL2 = operationL1 { ( "*" | "/" | "%" ) operationL2 } ;

operationL3 = operationL2 { ( "+" | "-" | "%" ) operationL2 } ;

operationL4 = operationL3 { ( "<" | ">" ) operationL3 } ;

operationL5 = operationL4 { ( "=" | "<>" ) operationL3 } ;

operationL6 = operationL5 { ":=" operationL5 } ;

if = "if" expression "then" expression [ "else" expression ] ;

while = "while" expression "do" expression ;

for = "for" identifier ":" expression ( "to" | "downto" ) expression "do" expression ;

call_args = expression { ";" expression } ;

type = "integer" | "array" "[" literal ".." literal "]" "of" type ;
